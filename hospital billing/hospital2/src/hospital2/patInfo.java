

package hospital2;

import hospital2.Database;
import hospital2.home;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;

public class patInfo extends javax.swing.JFrame {
    home q;
     JPopupMenu Pmenu;
     int row,column;
     String label;
    /** Creates new form patInfo */
    public patInfo(home h) {
        super("Patient Information");
        q=h;
        initComponents();
        try{
            Database db=new Database();
            db.getConnection();
            String sql1="select count(*) from patinfo";
            db.r=db.stmt.executeQuery(sql1);
            db.r.next();
            int n=db.r.getInt(1);
            String sql="select regno,caseno,name,ward,wardno,bedno from patinfo";
            db.r=db.stmt.executeQuery(sql);
            String s[][]=new String[n][6];
            for(int i=0;i<n;i++) {
                db.r.next();
                s[i][0]=db.r.getString(1);
                s[i][1]=db.r.getString(2);
               s[i][2]=db.r.getString(3);
                s[i][3]=db.r.getString(4);
                s[i][4]=""+db.r.getInt(5);
                s[i][5]=""+db.r.getInt(6);
            }
            db.closeAll();
            jTable1.setModel(new javax.swing.table.DefaultTableModel(s,
            new String [] {
                "RegNo", "CaseNo","Name","Ward","WardNo","BedNo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

                @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

                @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        }catch(Exception e){
        }
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(245, 165, 785, 465));

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24));
        jLabel1.setText(" Patient Information");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(255, 255, 153));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("OK");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospital2/patinfo.gif"))); // NOI18N
        jLabel2.setText("      ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(177, 177, 177)))
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel1)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jLabel2)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-816)/2, (screenSize.height-638)/2, 816, 638);
    }// </editor-fold>//GEN-END:initComponents

                                              
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        q.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        jTable1.addMouseListener(new MouseAdapter() 
        {
@Override
public void mouseReleased(MouseEvent e) 
{
    int r = jTable1.rowAtPoint(e.getPoint());
    if (r >= 0 && r < jTable1.getRowCount()) {
    jTable1.setRowSelectionInterval(r, r);
    } else {
    jTable1.clearSelection();
    }

    int rowindex = jTable1.getSelectedRow();
    if (rowindex < 0)
    return;
    if (e.isPopupTrigger() && e.getComponent() instanceof JTable ) 
    {
   
    JMenuItem menuItem;
    Pmenu = new JPopupMenu();
    menuItem = new JMenuItem("Modify");
    Pmenu.add(menuItem);
    menuItem = new JMenuItem("Delete");
    Pmenu.add(menuItem);
    menuItem = new JMenuItem("Details");
    Pmenu.add(menuItem);
   // Pmenu.show(e.getComponent(), e.getX(), e.getY());
    
    }
}
            @Override
public void mouseClicked(MouseEvent e) {
   // String a=evt.toString();
                JTable source = (JTable)e.getSource(); 
                row = source.rowAtPoint( e.getPoint() );
                column = source.columnAtPoint( e.getPoint() );
                if (! source.isRowSelected(row))
                source.changeSelection(row, column, false, false);

                 Pmenu.show(e.getComponent(), e.getX(), e.getY());
              // JMenuItem abc=(JMenuItem)e.getSource();
              int s=e.getButton();
               System.out.println(s);
               
               
               
                 
                System.out.println(row+" "+column);
                
                
                
                // Get the selected menu path
    MenuElement[] path = MenuSelectionManager.defaultManager().getSelectedPath();

if (path.length == 0) {
    // No menus are opened or menu items selected
}

// Retrieve the labels of all the menu elements in the path
for (int i=0; i<path.length; i++) {
    Component c = path[i].getComponent();

    if (c instanceof JMenuItem) {
        JMenuItem mi = (JMenuItem)c;
         label = mi.getText();
        // Note: JMenu is a subclass of JMenuItem; also JMenuBar does not have a label
    }
}
System.out.println(label);
}

});
        
       
    }//GEN-LAST:event_jTable1MouseClicked

    /**
    * @param args the command line arguments
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
